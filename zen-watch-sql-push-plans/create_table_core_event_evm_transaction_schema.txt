CREATE TABLE event_evm_transaction (
    id VARCHAR(36) NOT NULL,
    event_type VARCHAR(500) NOT NULL,
    dev_id INT NOT NULL,
    status INT NOT NULL,
    event_json JSON NOT NULL,
    backfill_json JSON NOT NULL,
    wallet_address VARCHAR(200) GENERATED ALWAYS AS (event_json->"$.wallet_address"),
    txn_hash VARCHAR(300) GENERATED ALWAYS AS (event_json->"$.event_properties.txn_hash"),
    txn_type INT GENERATED ALWAYS AS (backfill_json->"$.type"),
    txn_status INT GENERATED ALWAYS AS (backfill_json->"$.status"),
    to_address VARCHAR(200) GENERATED ALWAYS AS (backfill_json->"$.to"),
    exchange_rate DOUBLE GENERATED ALWAYS AS (backfill_json->"$.exchange_rate"),
    exchange_currency VARCHAR(50) GENERATED ALWAYS AS (backfill_json->"$.exchange_currency"),
    block_timestamp BIGINT GENERATED ALWAYS AS (backfill_json->"$.blockTimestamp"),
    txn_savings DOUBLE GENERATED ALWAYS AS (backfill_json->"$.txn_savings"),
    txn_savings_fiat DOUBLE GENERATED ALWAYS AS (backfill_json->"$.txn_savings_fiat"),
    value DOUBLE GENERATED ALWAYS AS (backfill_json->"$.value"),
    value_fiat DOUBLE GENERATED ALWAYS AS (backfill_json->"$.value_fiat"),
    final_txn_fee DOUBLE GENERATED ALWAYS AS (backfill_json->"$.final_txn_fee"),
    final_txn_fee_fiat DOUBLE GENERATED ALWAYS AS (backfill_json->"$.final_txn_fee_fiat"),
    is_smart_contract_call BOOLEAN GENERATED ALWAYS AS (backfill_json->"$.is_sc_call"),
    created_ts TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    updated_ts TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    PRIMARY KEY(id),
    INDEX EEVMT_ET (event_type ASC),
    INDEX EEVMT_STS (status ASC),
    INDEX EEVMT_CTS (created_ts ASC),
    INDEX EEVMT_UTS (updated_ts ASC),
    INDEX EEVMT_WA (wallet_address ASC),
    INDEX EEVMT_TA (to_address ASC),
    INDEX EEVMT_TH (txn_hash ASC),
    INDEX EEVMT_TS (txn_status ASC),
    INDEX EEVMT_ISCC (is_smart_contract_call ASC),
    CONSTRAINT EAK_FK FOREIGN KEY(dev_id) REFERENCES developer(id) ON DELETE RESTRICT ON UPDATE CASCADE
);