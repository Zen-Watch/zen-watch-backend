CREATE TABLE ifttt_instance (
  id INT NOT NULL AUTO_INCREMENT,
  ifttt_instance_worker_shard_id INT NOT NULL,
  dev_id INT NOT NULL,
  is_trigger_trusted_source TINYINT(1) DEFAULT 0,
  is_trigger_compute_intensive TINYINT(1) DEFAULT 0,
  is_trigger_push_mechanism TINYINT(1) DEFAULT 0,
  trigger_target_resource_name VARCHAR(500) NOT NULL,
  ifttt_instance_name VARCHAR(255) NOT NULL,
  ifttt_instance_description VARCHAR(5000) NOT NULL,
  ifttt_instance_is_on TINYINT(1) DEFAULT 0,
  trigger_info JSON NOT NULL,
  actions_info JSON NOT NULL,
  created_ts TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  updated_ts TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  PRIMARY KEY(id),
  INDEX IFTIITTS (is_trigger_trusted_source),
  INDEX IFTIITCI (is_trigger_compute_intensive),
  INDEX IFTIITPM (is_trigger_push_mechanism),
  INDEX IFTITTRN (trigger_target_resource_name ASC),
  INDEX IFTI_IIWSI (ifttt_instance_worker_shard_id ASC),
  INDEX IFTIIIN (ifttt_instance_name ASC),
  INDEX IFTI_IISON (ifttt_instance_is_on),
  INDEX IFTICTS (created_ts ASC),
  INDEX IFTIUTS (updated_ts ASC),
  CONSTRAINT IFTID_FK FOREIGN KEY(dev_id) REFERENCES developer(id) ON DELETE RESTRICT ON UPDATE CASCADE
);