CREATE TABLE ifttt_trigger_definition (
  id INT NOT NULL AUTO_INCREMENT,
  dev_id INT NOT NULL,
  is_public TINYINT(1) DEFAULT 0,
  is_approved TINYINT(1) DEFAULT 0,
  is_trusted_source TINYINT(1) DEFAULT 0,
  is_compute_intensive TINYINT(1) DEFAULT 0,
  is_push_mechanism TINYINT(1) DEFAULT 0,
  target_resource_name VARCHAR(500) NOT NULL,
  trigger_name VARCHAR(255) NOT NULL,
  trigger_description VARCHAR(5000) NOT NULL,
  trigger_signature TEXT NOT NULL,
  trigger_signature_description TEXT NOT NULL,
  trigger_code TEXT NOT NULL,
  trigger_code_description TEXT NOT NULL,
  trigger_expected_input TEXT NOT NULL,
  trigger_expected_input_description TEXT NOT NULL,
  trigger_expected_output TEXT NOT NULL,
  trigger_expected_output_description TEXT NOT NULL,
  created_ts TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  updated_ts TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  PRIMARY KEY(id),
  INDEX ITDIP (is_public),
  INDEX ITDIAP (is_approved),
  INDEX ITDITS (is_trusted_source),
  INDEX ITDICI (is_compute_intensive),
  INDEX ITDIPM (is_push_mechanism),
  INDEX ITDTRN (target_resource_name ASC),
  INDEX ITDTN (trigger_name ASC),
  INDEX ITDCTS (created_ts ASC),
  INDEX ITDUTS (updated_ts ASC),
  CONSTRAINT ITDD_FK FOREIGN KEY(dev_id) REFERENCES developer(id) ON DELETE RESTRICT ON UPDATE CASCADE
);